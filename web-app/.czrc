{
  "path": "cz-git",
  "scopes": [
    { "name": "auth", "description": "Authentication logic and services" },
    { "name": "authentication", "description": "User authentication flow" },
    { "name": "authorization", "description": "Access control and permission handling" },
    { "name": "ui", "description": "Shared UI components and design system" },
    { "name": "api", "description": "API interactions and service layers" },
    { "name": "config", "description": "General application configuration" },
    { "name": "utils", "description": "Helper and utility functions" },
    { "name": "header", "description": "Header UI and related logic" },
    { "name": "footer", "description": "Footer UI and related logic" },
    { "name": "sidebar", "description": "Sidebar UI and navigation" },
    { "name": "modal", "description": "Modal component behavior and structure" },
    { "name": "search", "description": "Search feature and UI" },
    { "name": "payment", "description": "Payment workflows and integrations" },
    { "name": "user-management", "description": "Admin tools for managing users" },
    { "name": "data-processing", "description": "Logic related to data transformation or processing" },
    { "name": "logging", "description": "Application logging and monitoring" },
    { "name": "unit-tests", "description": "Unit testing and coverage" },
    { "name": "integration-tests", "description": "Integration testing and validation" },
    { "name": "e2e-tests", "description": "End-to-end testing flows" },
    { "name": "onboarding", "description": "User onboarding process and UI" },
    { "name": "checkout", "description": "Checkout flow and payment submission" },
    { "name": "user-profile", "description": "User profile view and settings" },
    { "name": "deployment", "description": "Scripts and configs related to deployment" },
    { "name": "server-config", "description": "Server-side configuration and environment setup" },
    { "name": "database-config", "description": "Database schema and connection settings" },
    { "name": "eslint", "description": "ESLint rules and setup" },
    { "name": "babel", "description": "Babel configuration and transpilation setup" },
    { "name": "webpack", "description": "Webpack build configuration" },
    { "name": "module", "description": "Independent modules or features" },
    { "name": "service", "description": "Application service layer logic" },
    { "name": "interceptor", "description": "HTTP interceptors and middleware hooks" },
    { "name": "provider", "description": "Dependency injection and service providers" },
    { "name": "middleware", "description": "Server or API middleware logic" },
    { "name": "filter", "description": "Filtering logic in UI or backend" },
    { "name": "pipe", "description": "Data transformation logic (e.g., in Angular/NestJS)" },
    { "name": "resolver", "description": "Data resolvers for route guards or GraphQL" },
    { "name": "guard", "description": "Route or logic guards" },
    { "name": "decorator", "description": "Custom decorators and meta programming" },
    { "name": "library", "description": "External or internal libraries" },
    { "name": "websocket", "description": "WebSocket integrations and handlers" },
    { "name": "collaboration", "description": "Features for team collaboration or sharing" }
  ],
  "types": [
    { "value": "feat", "name": "✨ feat:     Add a new feature", "emoji": "✨" },
    { "value": "fix", "name": "🐛 fix:      Fix a bug", "emoji": "🐛" },
    { "value": "docs", "name": "📚 docs:     Documentation changes", "emoji": "📚" },
    { "value": "style", "name": "💄 style:    Code style changes", "emoji": "💄" },
    { "value": "refactor", "name": "♻️ refactor: Code refactoring", "emoji": "♻️" },
    { "value": "test", "name": "🧪 test:     Add or modify tests", "emoji": "🧪" },
    { "value": "chore", "name": "🔧 chore:    Maintenance tasks or non-code changes", "emoji": "🔧" },
    { "value": "perf", "name": "🚀 perf:     Performance improvements", "emoji": "🚀" },
    { "value": "deps", "name": "📦️ deps:     Update dependencies", "emoji": "📦️" },
    { "value": "security", "name": "🛡 security:     Address security vulnerabilities", "emoji": "🛡" },
    { "value": "remove", "name": "🗑️ remove:   Remove obsolete code", "emoji": "🗑️" },
    { "value": "comments", "name": "💬 comments: Add comments to the code", "emoji": "💬" },
    { "value": "error", "name": "🚨 error:    Handle errors or warnings", "emoji": "🚨" },
    { "value": "ux", "name": "🎨 ux:       Improve user experience", "emoji": "🎨" },
    { "value": "config", "name": "⚙️ config:   Changes in project configuration", "emoji": "⚙️" },
    { "value": "files", "name": "📁 files:    Changes in files or directories", "emoji": "📁" },
    { "value": "merge", "name": "🔀 merge:   Merge branch or pull request", "emoji": "🔀" },
    { "value": "revert", "name": "⏪️ revert:     Reverts a previous commit", "emoji": "⏪️" },
    { "value": "init", "name": "⭐ init:     Initialize project", "emoji": "⭐" }

  ],
  "useEmoji": true,
  "emojiAlign": "left"
}
